---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: spring-artemis-pipeline
  namespace: app-spring  # Ajustado para o namespace correto
spec:
  params:
  - name: APP_NAME
    type: string
    description: The application deployment name
    default: spring-artemis-producer  # Nome da sua aplicação
  - name: SOURCE_GIT_URL
    type: string
    description: The application git repository url
    default: https://github.com/oliveira-shiai/spring-artemis-producer-v2  # URL do repositório da sua aplicação
  - name: SOURCE_GIT_REVISION
    type: string
    default: master  # Revisão padrão do Git
    description: The application git repository revision
  - name: SOURCE_GIT_CONTEXT_DIR
    type: string
    default: spring-artemis-producer  # Diretório de contexto da aplicação
    description: The subdirectory in the git repository
  - name: NAMESPACE
    type: string
    description: Namespace where the BuildConfig is located
    default: app-spring  # Namespace correto para o BuildConfig
  - name: KUSTOMIZE_GIT_URL
    type: string
    description: The kustomize git repository URL
    default: https://github.com/oliveira-shiai/spring-artemis-producer-v2  # URL do repositório GitOps
  - name: KUSTOMIZE_GIT_REVISION
    type: string
    description: The kustomize git repository revision
    default: master  # Revisão do Git para GitOps
  - name: KUSTOMIZE_GIT_CONTEXT_DIR
    type: string
    description: The subdirectory in the kustomize git repository
    default: overlays/production  # Diretório dentro do repositório GitOps

  workspaces:
  - name: app-source
  - name: maven-settings

  tasks:
  - name: git-clone
    taskRef:
      kind: ClusterTask
      name: git-clone
    params:
    - name: url
      value: $(params.SOURCE_GIT_URL)
    - name: revision
      value: $(params.SOURCE_GIT_REVISION)
    - name: deleteExisting
      value: 'true'
    workspaces:
    - name: output
      workspace: app-source

  - name: build-maven
    runAfter:
    - git-clone
    taskRef:
      kind: ClusterTask
      name: maven
    params:
    - name: MAVEN_IMAGE
      value: registry.access.redhat.com/ubi8/openjdk-11-runtime  # Imagem OpenJDK correta para build
    - name: CONTEXT_DIR
      value: $(params.SOURCE_GIT_CONTEXT_DIR)
    - name: GOALS
      value:
      - clean
      - compile
      - package
      - -DskipTests
    workspaces:
    - name: source
      workspace: app-source
    - name: maven-settings
      workspace: maven-settings

  - name: build-image
    runAfter:
    - build-maven
    taskRef:
      kind: Task
      name: s2i-binary
    params:
    - name: FROM_FILE
      value: $(params.SOURCE_GIT_CONTEXT_DIR)/target/$(params.APP_NAME)-1.0-runner.jar
    - name: NAMESPACE
      value: $(params.NAMESPACE)
    - name: BUILDCONFIG
      value: $(params.APP_NAME)
    workspaces:
    - name: source
      workspace: app-source

  - name: generate-tag
    runAfter:
    - build-maven
    taskRef:
      kind: Task
      name: generate-tag

  - name: tag-image
    runAfter:
    - build-image
    - generate-tag
    taskRef:
      kind: ClusterTask
      name: openshift-client
    params:
    - name: SCRIPT
      value: >-
        oc tag
        $(params.NAMESPACE)/$(params.APP_NAME):latest
        $(params.NAMESPACE)/$(params.APP_NAME):$(tasks.generate-tag.results.image-tag)

  - name: update-image
    runAfter:
    - tag-image
    taskRef:
      kind: Task
      name: update-kustomize-repo
    params:
    - name: gitRepositoryUrl
      value: $(params.KUSTOMIZE_GIT_URL)
    - name: gitRepositoryRevision
      value: $(params.KUSTOMIZE_GIT_REVISION)
    - name: gitPath
      value: $(params.KUSTOMIZE_GIT_CONTEXT_DIR)
    - name: image
      value: image-registry.openshift-image-registry.svc:5000/$(params.NAMESPACE)/$(params.APP_NAME)
    - name: imageTag
      value: $(tasks.generate-tag.results.image-tag)
    - name: verbose
      value: 'true'
